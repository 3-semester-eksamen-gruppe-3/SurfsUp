@page "/BoardsList"
@using Microsoft.AspNetCore.Authorization
@using SurfProjektBlazor.Shared
@inject IAuthorizationService AuthorizationService
@inject HttpClient httpClient
@inject NavigationManager navigationManager
<h3>Surf Boards</h3>

<table class="table">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                Name
            </th>
            <th>
                Length
            </th>
            <th>
                Width
            </th>
            <th>
                Thickness
            </th>
            <th>
                Volume
            </th>
            <th>
                Type
            </th>
            <th>
                Price
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Board.Equipment)
            </th>*@
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in boards)
        {
            <tr>
                <td>
                    <img src="@item.Image" width="100px" height="100px" alt="Billede ikke fundet">
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @item.Length
                </td>
                <td>
                    @item.Width
                </td>
                <td>
                    @item.Thickness
                </td>
                <td>
                    @item.Volume
                </td>
                <td>
                    @item.Type
                </td>
                <td>
                    @item.Price
                </td>
                @* <td>
            @Html.DisplayFor(modelItem => item.Equipment)
            </td>*@
@*                @if ((AuthorizationService.AuthorizeAsync(user, ConstantsRole.Roles.Admin)).Succeeded)
                {*@
                <td>
                    <button style="background-color:white;border:none" @onclick=Edit>Rediger</button> |
                    <button style="background-color:white;border:none" @onclick="() => Details(item.Id)">Detaljer</button> |
                    <button style="background-color:white;border:none" @onclick=Delete>Slet</button>
                </td>
@*                }
                else
                {*@
                <td>
                    <button style="background-color:white;border:none" @onclick="() => Details(item.Id)">Detaljer</button>|
                    <button style="background-color:white;border:none" @onclick=Rent>Udlej</button>
                </td>
@*                }*@
            </tr>
        }
    </tbody>
</table>


@code {
    private List<Boards> boards = new List<Boards>();
    private string URL = "";

    protected async override Task OnInitializedAsync()
    {
        bool authenticated = await httpClient.GetFromJsonAsync<bool>("https://localhost:7278/api/User");
        if (authenticated)
        {
            URL = "https://localhost:7244/api/Boards?api-version=2.0";
        }
        else{
            URL = "https://localhost:7244/api/Boards?api-version=1.0";
        }
        boards = await httpClient.GetFromJsonAsync<List<Boards>>(URL);
    }

    private async Task Rent(){

    }

    private void Details(int ID){
        navigationManager.NavigateTo($"/details/{ID}");
    }

    private async Task Edit()
    {

    }

    private async Task Delete()
    {

    }

}
